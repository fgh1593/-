<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.lc.pojo.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="LichenID" jdbcType="VARCHAR" property="lichenid" />
    <result column="storeName" jdbcType="VARCHAR" property="storename" />
    <result column="receiptTitle" jdbcType="VARCHAR" property="receipttitle" />
    <result column="txIDNumber" jdbcType="VARCHAR" property="txidnumber" />
    <result column="storePhone" jdbcType="VARCHAR" property="storephone" />
    <result column="shopManager" jdbcType="VARCHAR" property="shopmanager" />
    <result column="shopManagerPhone" jdbcType="VARCHAR" property="shopmanagerphone" />
    <result column="storeAddress" jdbcType="VARCHAR" property="storeaddress" />
    <result column="receiptAddress" jdbcType="VARCHAR" property="receiptaddress" />
    <result column="depositoryAddress" jdbcType="VARCHAR" property="depositoryaddress" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lc.pojo.Customer">
    insert into customer (id, LichenID, storeName, 
      receiptTitle, txIDNumber, storePhone, 
      shopManager, shopManagerPhone, storeAddress, 
      receiptAddress, depositoryAddress)
    values (#{id,jdbcType=INTEGER}, #{lichenid,jdbcType=VARCHAR}, #{storename,jdbcType=VARCHAR}, 
      #{receipttitle,jdbcType=VARCHAR}, #{txidnumber,jdbcType=VARCHAR}, #{storephone,jdbcType=VARCHAR}, 
      #{shopmanager,jdbcType=VARCHAR}, #{shopmanagerphone,jdbcType=VARCHAR}, #{storeaddress,jdbcType=VARCHAR}, 
      #{receiptaddress,jdbcType=VARCHAR}, #{depositoryaddress,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lc.pojo.Customer">
    update customer
    set LichenID = #{lichenid,jdbcType=VARCHAR},
      storeName = #{storename,jdbcType=VARCHAR},
      receiptTitle = #{receipttitle,jdbcType=VARCHAR},
      txIDNumber = #{txidnumber,jdbcType=VARCHAR},
      storePhone = #{storephone,jdbcType=VARCHAR},
      shopManager = #{shopmanager,jdbcType=VARCHAR},
      shopManagerPhone = #{shopmanagerphone,jdbcType=VARCHAR},
      storeAddress = #{storeaddress,jdbcType=VARCHAR},
      receiptAddress = #{receiptaddress,jdbcType=VARCHAR},
      depositoryAddress = #{depositoryaddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, LichenID, storeName, receiptTitle, txIDNumber, storePhone, shopManager, 
    shopManagerPhone, storeAddress, receiptAddress, depositoryAddress
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, LichenID, storeName, receiptTitle, txIDNumber, storePhone, shopManager, 
    shopManagerPhone, storeAddress, receiptAddress, depositoryAddress
    from customer order by LichenID
  </select>
  
  <select id="selByBind" parameterType="java.lang.String" resultType="com.lc.pojo.Customer">
	<bind name="searchCus" value="'%'+searchCus+'%'"></bind>
	select * from customer where lichenid like #{searchCus} or storename like #{searchCus} or receipttitle like #{searchCus} or txidnumber like #{searchCus}
</select>
  
</mapper>